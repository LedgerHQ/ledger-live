{
  "name": "@ledgerhq/coin-xrp",
  "version": "6.1.3",
  "description": "Ledger XRP Coin integration",
  "keywords": [
    "Ledger",
    "LedgerWallet",
    "xrp",
    "Ripple",
    "Hardware Wallet"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/LedgerHQ/ledger-live.git"
  },
  "bugs": {
    "url": "https://github.com/LedgerHQ/ledger-live/issues"
  },
  "homepage": "https://github.com/LedgerHQ/ledger-live/tree/develop/libs/coin-modules/coin-xrp",
  "publishConfig": {
    "access": "public"
  },
  "typesVersions": {
    "*": {
      "lib/*": [
        "lib/*"
      ],
      "lib-es/*": [
        "lib-es/*"
      ],
      "api": [
        "lib/api/index"
      ],
      "deviceTransactionConfig": [
        "lib/bridge/deviceTransactionConfig"
      ],
      "logic": [
        "lib/logic/index"
      ],
      "specs": [
        "lib/test/bot-specs"
      ],
      "transaction": [
        "lib/transaction"
      ],
      "types": [
        "lib/types/index"
      ],
      "*": [
        "lib/*",
        "lib/bridge/*",
        "lib/logic/*",
        "lib/signer/*",
        "lib/test/*",
        "lib/types/*"
      ]
    }
  },
  "exports": {
    "./lib/*": "./lib/*.js",
    "./lib-es/*": "./lib-es/*.js",
    "./api": {
      "require": "./lib/api/index.js",
      "default": "./lib-es/api/index.js"
    },
    "./deviceTransactionConfig": {
      "require": "./lib/bridge/deviceTransactionConfig.js",
      "default": "./lib-es/bridge/deviceTransactionConfig.js"
    },
    "./logic": {
      "require": "./lib/logic/index.js",
      "default": "./lib-es/logic/index.js"
    },
    "./signer": {
      "require": "./lib/signer/index.js",
      "default": "./lib-es/signer/index.js"
    },
    "./specs": {
      "require": "./lib/test/bot-specs.js",
      "default": "./lib-es/test/bot-specs.js"
    },
    "./transaction": {
      "require": "./lib/transaction.js",
      "default": "./lib-es/transaction.js"
    },
    "./types": {
      "require": "./lib/types/index.js",
      "default": "./lib-es/types/index.js"
    },
    "./*": {
      "require": "./lib/*.js",
      "default": "./lib-es/*.js"
    },
    ".": {
      "require": "./lib/index.js",
      "default": "./lib-es/index.js"
    },
    "./package.json": "./package.json"
  },
  "license": "Apache-2.0",
  "dependencies": {
    "@ledgerhq/coin-framework": "workspace:^",
    "@ledgerhq/cryptoassets": "workspace:^",
    "@ledgerhq/devices": "workspace:*",
    "@ledgerhq/errors": "workspace:^",
    "@ledgerhq/live-network": "workspace:^",
    "@ledgerhq/types-live": "workspace:^",
    "@ledgerhq/logs": "workspace:^",
    "bignumber.js": "^9.1.2",
    "invariant": "^2.2.4",
    "ripple-address-codec": "^5.0.0",
    "ripple-binary-codec": "^1.3.0",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@faker-js/faker": "^8.4.1",
    "@ledgerhq/disable-network-setup": "workspace:^",
    "@ledgerhq/types-cryptoassets": "workspace:^",
    "@types/invariant": "^2.2.37",
    "@types/jest": "^29.5.12",
    "dotenv": "^16.4.5",
    "expect": "^27.4.6",
    "jest": "^29.7.0",
    "ripple-keypairs": "^2.0.0",
    "ts-jest": "^29.1.1",
    "typescript": "^5.4.5"
  },
  "scripts": {
    "clean": "rimraf lib lib-es",
    "build": "tsc && tsc -m esnext --moduleResolution bundler --outDir lib-es",
    "coverage": "jest --coverage || true",
    "prewatch": "pnpm build",
    "watch": "tsc --watch",
    "watch:es": "tsc --watch -m esnext --moduleResolution bundler --outDir lib-es",
    "doc": "documentation readme src/** --section=API --pe ts --re ts --re d.ts",
    "lint": "eslint ./src --no-error-on-unmatched-pattern --ext .ts,.tsx --cache",
    "lint:fix": "pnpm lint --fix",
    "test": "jest",
    "test:debug": "node --inspect-brk ./node_modules/jest/bin/jest.js --runInBand",
    "test-watch": "jest --watch",
    "test-integ": "DOTENV_CONFIG_PATH=.env.integ.test jest --config=jest.integ.config.js",
    "test-integ:debug": "DOTENV_CONFIG_PATH=.env.integ.test node --inspect-brk ./node_modules/jest/bin/jest.js --runInBand --config=jest.integ.config.js",
    "typecheck": "tsc --noEmit",
    "unimported": "unimported"
  }
}
