import Eth from "./src/Eth";
import TransportNodeHid from "../hw-transport-node-hid";
import { ethers } from "ethers";

(async () => {
  const tx = {
    to: "0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD",
    data: "0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000654beab700000000000000000000000000000000000000000000000000000000000000020b080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000038d7ea4c6800000000000000000000000000000000000000000000000006c18930d962b1900e900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000072c60bfffef18dca51db32b52b819a951b6ddbed",
    chainId: 1,
    gasLimit: ethers.BigNumber.from("100000"),
    gasPrice: ethers.BigNumber.from("1000000000"),
    nonce: 0,
    value: ethers.BigNumber.from("0"),
  };

  const serialized = ethers.utils.serializeTransaction(tx);
  const transport = await TransportNodeHid.create();
  const eth = new Eth(transport);

  const res = await eth.signTransaction("44'/60'/0'/0/0", serialized.slice(2));

  console.log(res);
})();
