name: React Build

on:
  push:
    branches:
      - main
    paths:
      - "packages/react/**"
      - "examples/**"
  pull_request:
    branches:
      - main
    paths:
      - "packages/react/**"
      - "examples/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      lint_outcome: ${{ steps.lint.outcome }}
      typecheck_outcome: ${{ steps.typecheck.outcome }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn --cwd packages/react install --focus
      - name: Linter
        id: lint
        run: yarn --cwd packages/react lint
      - name: Typecheck
        id: typecheck
        run: yarn --cwd packages/react typecheck

  tests:
    runs-on: ubuntu-latest
    outputs:
      build_outcome: ${{ steps.build.outcome }}
      test_outcome: ${{ steps.test.outcome }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn
      - name: Build packages
        id: build
        run: yarn test:react:setup
      - name: Run tests
        id: test
        run: yarn test:react
      - name: (On Failure) Upload test data
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-run-data
          path: |
            tests/react.spec.js-snapshots/
            test-results/

  comment-bot:
    needs: [build, tests]
    if: always() && github.event_name == 'pull_request' && (needs.build.result == 'failure' || needs.tests.result == 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: (On Failure) Comment PR
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }, runId } = context;

            const results = [
              "${{ needs.build.outputs.lint_outcome }}",
              "${{ needs.build.outputs.typecheck_outcome }}",
              "${{ needs.tests.outputs.build_outcome }}",
              "${{ needs.tests.outputs.test_outcome }}"
            ];

            const sections = results.map((outcome, index) => {
              const failed = outcome === "failure";
              const success = outcome === "success";

              switch(index) {
                case 0:
                  return success ? "#### ✅ - Lint\n" : failed ? (
                    "#### ❌ - Lint\n\n" +
                    "*Run `yarn react lint:fix` locally to show linting errors and attempt to automatically fix problems.*\n"
                  ) : "#### ❓ - Lint\n"
                case 1:
                  return success ? "#### ✅ - Typecheck\n" : failed ? (
                    "#### ❌ - Typecheck\n\n" +
                    "*Run `yarn react typecheck` locally and fix the typescript issues.*\n"
                  ) : "#### ❓ - Typecheck\n"
                case 2:
                  return success ? "#### ✅ - Build\n" : failed ? (
                    "#### ❌ - Build\n\n" +
                    "Something happened while trying to build the test environment.\n\n" +
                    "*Use the `yarn test:react:setup` command to run the setup process and fix the reported issues.*\n"
                  ) : "#### ❓ - Build\n"
                case 3:
                  return success ? "#### ✅ - End To End\n" : failed ? (
                    "#### ❌ - End To End\n\n" +
                    "*You can use the `yarn test:react` command to run the tests locally - and run `yarn test:react:setup` first if needed.*\n" +
                    "##### NOTE: If the [visual comparison](https://playwright.dev/docs/test-snapshots) failed and you think that the changes are legitimate, you can download the `test-run-data` artifact at the bottom of the action page and replace the reference snapshots located at `/tests/react.spec.js-snapshots`.\n"
                  ) : "#### ❓ - End To End\n"
                default:
                  return ""
              }
            }).filter(Boolean);

            const comment = `
            ### Run failed! 💥

            #### \`@ledgerhq/react-ui\`

            #### Please check the [action page](https://github.com/LedgerHQ/ui/actions/runs/${runId}) to find more details including the logs.

            ---

            ### Report:

            ${sections.join("\n")}
            `;

            github.rest.issues.createComment({ issue_number, owner, repo, body: comment });
