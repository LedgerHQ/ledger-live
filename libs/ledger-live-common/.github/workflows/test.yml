name: Tests
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master
      - develop

jobs:
  start-runner:
    name: "start ec2 instance (Linux)"
    if: ${{ always() }}
    uses: ledgerhq/actions/.github/workflows/start-linux-runner.yml@main
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  stop-runner:
    name: "stop ec2 instance (Linux)"
    needs: [start-runner, cli-linux, jest-linux]
    uses: ledgerhq/actions/.github/workflows/stop-linux-runner.yml@main
    if: ${{ always() && needs.start-runner.result == 'success' }}
    with:
      label: ${{ needs.start-runner.outputs.label }}
      ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  jest-linux:
    needs: [start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - uses: actions/setup-python@v2
        with:
          python-version: "2.x"
      - name: Install yarn
        run: npm i -g yarn
      - name: Install dependencies
        run: |
          yarn global add yalc codecov
          yarn --frozen-lockfile --network-timeout 100000
      - name: Setup Tests
        run: yarn ci-setup-cli
      - name: Deps versions
        run: yarn jest --version
      - name: Lint
        run: yarn ci-lint
      - name: Run tests
        run: npx cross-env VERBOSE_FILE=tests_output.txt yarn ci-test-common
        timeout-minutes: 60
      - name: upload snapshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: snapshots-src-linux
          path: src/
      - name: upload logs
        if: failure() || success()
        uses: actions/upload-artifact@v3
        with:
          name: tests_output-linux.txt
          path: tests_output.txt

  jest:
    name: jest-${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - uses: actions/setup-python@v2
        with:
          python-version: "2.x"
      - name: Install dependencies
        run: |
          yarn global add yalc codecov
          yarn --frozen-lockfile --network-timeout 100000
      - name: Setup Tests
        run: yarn ci-setup-cli
      - name: Deps versions
        run: yarn jest --version
      - name: Lint
        run: yarn ci-lint
        if: runner.os != 'Windows'
      - name: Setup TimeZone for Windows
        run: tzutil /s "Eastern Standard Time"
        if: runner.os == 'Windows'
      - name: Run tests
        run: npx cross-env VERBOSE_FILE=tests_output.txt yarn ci-test-common
        timeout-minutes: 60
      - name: Run coverage
        if: runner.os == 'macOS'
        run: CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} npx codecov
      - name: upload snapshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: snapshots-src-${{ runner.os }}
          path: src/
      - name: upload logs
        if: failure() || success()
        uses: actions/upload-artifact@v3
        with:
          name: tests_output-${{ runner.os }}.txt
          path: tests_output.txt

  cli-linux:
    runs-on: ${{ needs.start-runner.outputs.label }}
    needs: [start-runner]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - name: install yarn
        run: npm i -g yarn
      - uses: actions/setup-python@v2
        with:
          python-version: "2.7.x"
      - name: kill apt-get
        run: sudo killall apt-get apt || echo OK
      - name: Install linux deps
        run: sudo apt-get install -y libusb-1.0-0-dev jq
      - name: Install dependencies
        run: |
          yarn global add yalc
          yarn --frozen-lockfile --network-timeout 100000
          yarn ci-setup-cli

  cli:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - uses: actions/setup-python@v2
        with:
          python-version: "2.7.x"
      - name: Install dependencies
        run: |
          yarn global add yalc
          yarn --frozen-lockfile --network-timeout 100000
          yarn ci-setup-cli
