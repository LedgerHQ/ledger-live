diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java b/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
index 6664b6f6eacb37743d049556dc55f613c0244517..ed3266eadb07a090415445d33315d1ffedfe8497 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
@@ -90,6 +90,10 @@ public class RNCWebView extends WebView implements LifecycleEventListener {
         mRNCWebViewClient.setBasicAuthCredential(credential);
     }
 
+    public void setAllowsUnsecureHttps(boolean allowsUnsecureHttps) {
+        mRNCWebViewClient.setAllowsUnsecureHttps(allowsUnsecureHttps);
+    }
+
     public void setSendContentSizeChangeEvents(boolean sendContentSizeChangeEvents) {
         this.sendContentSizeChangeEvents = sendContentSizeChangeEvents;
     }
diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java
index d59e19ce82a5a03a60c558b35171af713719af4a..d26a074e0699d4b104c3f725588311069a306d6b 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java
@@ -39,6 +39,7 @@ public class RNCWebViewClient extends WebViewClient {
     protected static final int SHOULD_OVERRIDE_URL_LOADING_TIMEOUT = 250;
 
     protected boolean mLastLoadFailed = false;
+    protected boolean mAllowsUnsecureHttps = false;
     protected RNCWebView.ProgressChangedFilter progressChangedFilter = null;
     protected @Nullable String ignoreErrFailedForThisURL = null;
     protected @Nullable RNCBasicAuthCredential basicAuthCredential = null;
@@ -51,6 +52,10 @@ public class RNCWebViewClient extends WebViewClient {
         basicAuthCredential = credential;
     }
 
+    public void setAllowsUnsecureHttps(boolean allowsUnsecureHttps) {
+        mAllowsUnsecureHttps = allowsUnsecureHttps;
+    }
+
     @Override
     public void onPageFinished(WebView webView, String url) {
         super.onPageFinished(webView, url);
@@ -161,7 +166,11 @@ public class RNCWebViewClient extends WebViewClient {
         // Cancel request after obtaining top-level URL.
         // If request is cancelled before obtaining top-level URL, undesired behavior may occur.
         // Undesired behavior: Return value of WebView.getUrl() may be the current URL instead of the failing URL.
-        handler.cancel();
+        if (mAllowsUnsecureHttps) {
+          handler.proceed();
+        } else {
+          handler.cancel();
+        }
 
         if (!topWindowUrl.equalsIgnoreCase(failingUrl)) {
             // If error is not due to top-level navigation, then do not call onReceivedError()
diff --git a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
index 4600a8dc5c448a2236d25e40172453f93ae92c45..5d14c0c730014ba75e6b34bc3072c9833ae33344 100644
--- a/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
+++ b/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewManagerImpl.kt
@@ -554,6 +554,10 @@ class RNCWebViewManagerImpl {
         setupWebChromeClient(view)
     }
 
+    fun setAllowsUnsecureHttps(viewWrapper: RNCWebViewWrapper, value: Boolean) {
+        viewWrapper.webView.setAllowsUnsecureHttps(value)
+    }
+
     fun setAndroidLayerType(viewWrapper: RNCWebViewWrapper, layerTypeString: String?) {
         val view = viewWrapper.webView
         val layerType = when (layerTypeString) {
diff --git a/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 5bae4aa9e66897473a9083a2c9320c99d72e80d7..98c48177640d664fb83295d051edb38fbd449235 100644
--- a/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/android/src/newarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -87,6 +87,12 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper>
         mRNCWebViewManagerImpl.setAllowsFullscreenVideo(view, value);
     }
 
+    @Override
+    @ReactProp(name = "allowsUnsecureHttps")
+    public void setAllowsUnsecureHttps(RNCWebViewWrapper view, boolean value) {
+        mRNCWebViewManagerImpl.setAllowsUnsecureHttps(view, value);
+    }
+
     @Override
     @ReactProp(name = "allowsProtectedMedia")
     public void setAllowsProtectedMedia(RNCWebViewWrapper view, boolean value) {
diff --git a/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java b/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
index 709117a91e44c2e32a263c638b0c092185d76e94..2036df9718913aca1290457aa23aee4302efbae7 100644
--- a/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
+++ b/android/src/oldarch/com/reactnativecommunity/webview/RNCWebViewManager.java
@@ -66,6 +66,11 @@ public class RNCWebViewManager extends ViewGroupManager<RNCWebViewWrapper> {
         mRNCWebViewManagerImpl.setAllowsFullscreenVideo(view, value);
     }
 
+    @ReactProp(name = "allowsUnsecureHttps")
+    public void setAllowsUnsecureHttps(RNCWebViewWrapper view, boolean value) {
+        mRNCWebViewManagerImpl.setAllowsUnsecureHttps(view, value);
+    }
+
     @ReactProp(name = "allowsProtectedMedia")
     public void setAllowsProtectedMedia(RNCWebViewWrapper view, boolean value) {
         mRNCWebViewManagerImpl.setAllowsProtectedMedia(view, value);
diff --git a/apple/RNCWebViewImpl.h b/apple/RNCWebViewImpl.h
index ba9adf749d3874b74952a8f7d7044d939672a6b3..3ec9134c207a3790378cafc5840de709b045f552 100644
--- a/apple/RNCWebViewImpl.h
+++ b/apple/RNCWebViewImpl.h
@@ -81,6 +81,7 @@ shouldStartLoadForRequest:(NSMutableDictionary<NSString *, id> *)request
 @property (nonatomic, assign) CGFloat decelerationRate;
 @property (nonatomic, assign) BOOL allowsInlineMediaPlayback;
 @property (nonatomic, assign) BOOL webviewDebuggingEnabled;
+@property (nonatomic, assign) BOOL allowsUnsecureHttps;
 @property (nonatomic, assign) BOOL allowsAirPlayForMediaPlayback;
 @property (nonatomic, assign) BOOL bounces;
 @property (nonatomic, assign) BOOL mediaPlaybackRequiresUserAction;
diff --git a/apple/RNCWebViewImpl.m b/apple/RNCWebViewImpl.m
index 3203f8012a391c76d5ce9e20aa6b3c453e371519..bce39749c2dba7457beed62fc2cbc8b4c592f6b6 100644
--- a/apple/RNCWebViewImpl.m
+++ b/apple/RNCWebViewImpl.m
@@ -1120,6 +1120,12 @@ RCTAutoInsetsProtocol>
     completionHandler(NSURLSessionAuthChallengeUseCredential, clientAuthenticationCredential);
     return;
   }
+  if (_allowsUnsecureHttps == true) {
+    SecTrustRef trust = [[challenge protectionSpace] serverTrust];
+    NSURLCredential *useCredential = [NSURLCredential credentialForTrust:trust];
+    completionHandler(NSURLSessionAuthChallengeUseCredential, useCredential);
+    return;
+  }
   if ([[challenge protectionSpace] serverTrust] != nil && customCertificatesForHost != nil && host != nil) {
     SecCertificateRef localCertificate = (__bridge SecCertificateRef)([customCertificatesForHost objectForKey:host]);
     if (localCertificate != nil) {
diff --git a/apple/RNCWebViewManager.mm b/apple/RNCWebViewManager.mm
index 1c993f113dc12f4e3562b94266c89d35f4bbbce2..19ab256b53a37b708d868eedf21a509c03d421bf 100644
--- a/apple/RNCWebViewManager.mm
+++ b/apple/RNCWebViewManager.mm
@@ -71,6 +71,7 @@ RCT_EXPORT_VIEW_PROPERTY(allowFileAccessFromFileURLs, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(allowUniversalAccessFromFileURLs, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(allowsInlineMediaPlayback, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(webviewDebuggingEnabled, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(allowsUnsecureHttps, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(allowsAirPlayForMediaPlayback, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(mediaPlaybackRequiresUserAction, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(dataDetectorTypes, WKDataDetectorTypes)
diff --git a/lib/WebViewTypes.d.ts b/lib/WebViewTypes.d.ts
index 7cbd83521257c1a730cca632a712737253dcddab..bef74ed7ed39c647772c2ffd91a7afd8a8f4bdd0 100644
--- a/lib/WebViewTypes.d.ts
+++ b/lib/WebViewTypes.d.ts
@@ -1,5 +1,5 @@
-import { ReactElement, Component, ComponentProps } from 'react';
-import { NativeSyntheticEvent, ViewProps, StyleProp, ViewStyle, NativeMethodsMixin, UIManagerStatic, NativeScrollEvent } from 'react-native';
+import { Component, ComponentProps, ReactElement } from 'react';
+import { NativeMethodsMixin, NativeScrollEvent, NativeSyntheticEvent, StyleProp, UIManagerStatic, ViewProps, ViewStyle } from 'react-native';
 import type NativeWebViewComponent from './RNCWebViewNativeComponent';
 type WebViewCommands = 'goForward' | 'goBack' | 'reload' | 'stopLoading' | 'postMessage' | 'injectJavaScript' | 'loadUrl' | 'requestFocus' | 'clearCache';
 type AndroidWebViewCommands = 'clearHistory' | 'clearFormData';
@@ -465,6 +465,11 @@ export interface IOSWebViewProps extends WebViewSharedProps {
      * @platform ios
      */
     allowUniversalAccessFromFileURLs?: boolean;
+    /**
+     * A Boolean value indicating whether unsecure https is allowed. The default value is `false`.
+     * @platform ios
+     */
+    allowsUnsecureHttps?: boolean;
     /**
      * Function that is invoked when the WebKit WebView content process gets terminated.
      * @platform ios
@@ -857,6 +862,11 @@ export interface AndroidWebViewProps extends WebViewSharedProps {
      * Sets ability to open fullscreen videos on Android devices.
      */
     allowsFullscreenVideo?: boolean;
+     /**
+     * A Boolean value indicating whether unsecure https is allowed. The default value is `false`.
+     * @platform android
+     */
+    allowsUnsecureHttps?: boolean;
     /**
      * Configuring Dark Theme
      *
@@ -1067,4 +1077,5 @@ export interface WebViewSharedProps extends ViewProps {
      */
     webviewDebuggingEnabled?: boolean;
 }
-export {};
+export { };
+
