diff --git a/local-cli/testCommand/TestRunnerCommand.js b/local-cli/testCommand/TestRunnerCommand.js
index afdc985d5a55396fbec0affd0927156348e656d0..1c71bce08e05768ec2f92245316154ecd0f3445f 100644
--- a/local-cli/testCommand/TestRunnerCommand.js
+++ b/local-cli/testCommand/TestRunnerCommand.js
@@ -35,6 +35,7 @@ class TestRunnerCommand {
     this._startCommands = this._prepareStartCommands(commands, cliConfig);
     this._envFwd = {};
     this._terminating = false;
+    this._isRetry = false; // Track whether it's a retry
 
     if (runnerConfig.forwardEnv) {
       this._envFwd = this._buildEnvOverride(cliConfig, deviceConfig);
@@ -79,6 +80,7 @@ class TestRunnerCommand {
         }
 
         if (--runsLeft > 0) {
+          this._isRetry = true;
           // @ts-ignore
           detox.session.testSessionIndex++; // it is always the primary context, so we can update it
 
@@ -204,11 +206,16 @@ class TestRunnerCommand {
     /* istanbul ignore next */
     const { _: specs = [], '--': passthrough = [], $0, ...argv } = this._argv;
     const { _: $0_, ...$0argv } = parser($0);
+    
+    // Remove shard arguments for retries
+    const filteredArgv = this._isRetry
+      ? _.omit(argv, ['shard'])
+      : argv;
 
     return [
       ...$0_,
       ...unparse($0argv),
-      ...unparse(argv),
+      ...unparse(filteredArgv),
       ...unparse({ _: [...passthrough, ...specs] }),
     ].map(String);
   }
diff --git a/src/devices/common/drivers/android/exec/ADB.js b/src/devices/common/drivers/android/exec/ADB.js
index 434b0d65c89f8086084c8714c98e446c9bf54c3a..3b83753d3a3bd5468b53c4b0555bd278e301dbab 100644
--- a/src/devices/common/drivers/android/exec/ADB.js
+++ b/src/devices/common/drivers/android/exec/ADB.js
@@ -8,7 +8,10 @@ const { escape } = require('../../../../../utils/pipeCommands');
 const DeviceHandle = require('../tools/DeviceHandle');
 const EmulatorHandle = require('../tools/EmulatorHandle');
 
-const INSTALL_TIMEOUT = 45000;
+const INSTALL_TIMEOUT = 60000;
+const {
+  DETOX_INSTALL_TIMEOUT
+} = process.env;
 
 class ADB {
   constructor() {
@@ -113,7 +116,7 @@ class ADB {
     const command = (apiLvl >= 23)
       ? `install -r -g -t ${apkPath}`
       : `install -rg ${apkPath}`;
-    const result = await this.adbCmdSpawned(deviceId, command, { timeout: INSTALL_TIMEOUT, retries: 3 });
+    const result = await this.adbCmdSpawned(deviceId, command, { timeout: DETOX_INSTALL_TIMEOUT || INSTALL_TIMEOUT, retries: 3 });
 
     const [failure] = (result.stdout || '').match(/^Failure \[.*\]$/m) || [];
     if (failure) {
