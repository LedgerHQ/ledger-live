name: Desktop App - Generate Screenshots

on:
  workflow_dispatch:
    inputs:
      ref:
        description: The branch to generate screenshots for.
        required: false
      number:
        description: The pull request number.
        required: false
      login:
        description: The GitHub username that triggered the workflow
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  report-start:
    name: Report start
    runs-on: "ubuntu-latest"
    steps:
      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v2.0.0
        with:
          issue-number: ${{ github.event.inputs.number }}
          body: |
            <!-- generate-screenshots-report:${{ github.run_id }} -->
            @${{ github.event.inputs.login }}
            [Generating screenshots: workflow started](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

  is-org-member:
    name: "Check Org Member"
    uses: ledgerhq/ledger-live/.github/workflows/is-org-member.yml@develop
    with:
      username: ${{ github.event.inputs.login }}
      organisation: ledgerhq
    secrets:
      token: ${{ secrets.COMMON_READ_ORG }}

  # test-failing-job:
  #   needs: [report-started]
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - name: failing job
  #       run: exit 1

  generate-screenshots:
    needs: [is-org-member]
    if: ${{ fromJSON(needs.is-org-member.outputs.is-org-member) }}
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
      FORCE_COLOR: 3
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event.inputs.ref != null }}
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0
      - uses: actions/checkout@v3
        if: ${{ !github.event.inputs.ref }}
        with:
          fetch-depth: 0
      - uses: ./tools/actions/composites/setup-test-desktop
        id: setup-test-desktop
      - name: Checkout PR
        if: ${{ github.event.inputs.number != null && github.event.inputs.ref == null }}
        run: gh pr checkout ${{ github.event.inputs.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: TurboRepo local caching server
        id: turborepo-cache-server
        uses: ./tools/actions/turborepo-gh-cache
        with:
          server-token: "yolo"
          cleanup-cache-folder: "true"
      - uses: ./tools/actions/composites/update-snapshots-desktop
        id: update-snapshots
        with:
          os: ${{ matrix.os }}
          turbo-server-port: ${{ steps.turborepo-cache-server.outputs.port }}

  generate-screenshots-mac-internal:
    needs: [is-org-member]
    if: ${{ fromJSON(needs.is-org-member.outputs.is-org-member) }}
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
      FORCE_COLOR: 3
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    runs-on: [ledger-live, macos]
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event.inputs.ref != null }}
        with:
          fetch-depth: 0
      - uses: actions/checkout@v3
        if: ${{ !github.event.inputs.ref }}
        with:
          fetch-depth: 0
      - uses: ./tools/actions/composites/setup-test-desktop
        id: setup-test-desktop
        with:
          skip_python: true
          skip_ruby: true
      - name: Checkout PR
        if: ${{ github.event.inputs.number != null && github.event.inputs.ref == null }}
        run: gh pr checkout ${{ github.event.inputs.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: TurboRepo local caching server
        id: turborepo-cache-server
        uses: ./tools/actions/turborepo-gh-cache
        with:
          server-token: "yolo"
          cleanup-cache-folder: "true"
      - uses: ./tools/actions/composites/update-snapshots-desktop
        id: update-snapshots
        with:
          os: "macos-latest"
          turbo-server-port: ${{ steps.turborepo-cache-server.outputs.port }}

  report-end:
    needs: ["generate-screenshots", "generate-screenshots-mac-internal", "report-start"]
    if: always()
    name: Report end
    runs-on: "ubuntu-latest"
    steps:
      - name: get jobs status
        id: jobs_status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          JOBS_STATUS=$(gh run view -R ${{ github.repository }} ${{ github.run_id }} | grep "(ID " | grep "generate-screenshots")
          touch body.txt
          echo "**Successful:**\n" >> body.txt
          echo "\`\`\`\n" >> body.txt
          echo $JOBS_STATUS | grep ✓ >> body.txt
          echo "\`\`\`\n" >> body.txt
          echo "**Failures:**\n" >> body.txt
          echo "\`\`\`" >> body.txt
          echo $JOBS_STATUS | grep --invert-match ✓ >> body.txt
          echo "\`\`\`\n" >> body.txt
          BODY=$(cat body.txt)
          rm body.txt
          
          # below, a trick to fit multiple lines in an output https://github.com/peter-evans/create-or-update-comment#setting-the-comment-body-from-a-file: 
          BODY="${BODY//'%'/'%25'}"
          BODY="${BODY//$'\n'/'%0A'}"
          BODY="${BODY//$'\r'/'%0D'}"
          echo "::set-output name=BODY::$BODY"
      - name: Find existing comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.inputs.number }}
          comment-author: "github-actions[bot]"
          body-includes: <!-- generate-screenshots-report:${{ github.run_id }} -->
      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v2.0.0
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- generate-screenshots-report:${{ github.run_id }} -->
            @${{ github.event.inputs.login }}
            [Generating screenshots: workflow ended:](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ${{ steps.jobs_status.outputs.BODY }}
