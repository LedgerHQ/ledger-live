name: Desktop App - Generate Screenshots

on:
  workflow_dispatch:
    inputs:
      ref:
        description: The branch to generate screenshots for.
        required: false
      number:
        description: The pull request number.
        required: false
      login:
        description: The GitHub username that triggered the workflow
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  is-org-member:
    name: "Check Org Member"
    uses: ledgerhq/ledger-live/.github/workflows/is-org-member.yml@develop
    with:
      username: ${{ github.event.inputs.login }}
      organisation: ledgerhq
    secrets:
      token: ${{ secrets.COMMON_READ_ORG }}

  generate_screenshots:
    needs: [is-org-member]
    if: ${{ needs.is-org-member.outputs.is-org-member }}
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      INSTRUMENT_BUILD: true
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event.inputs.ref != null }}
        with:
          fetch-depth: 0
      - uses: actions/checkout@v3
        if: ${{ !github.event.inputs.ref }}
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - uses: actions/setup-python@v2
        with:
          python-version: "2.7.x"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true
      - name: Checkout PR
        if: ${{ github.event.inputs.number != null && github.event.inputs.ref == null }}
        run: gh pr checkout ${{ github.event.inputs.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: Bump npm to latest
        run: npm i -g npm
      - name: Install dependencies
        run: pnpm i --filter="ledger-live-desktop..." --filter="ledger-live" --frozen-lockfile --unsafe-perm
      - name: Install playwright dependencies
        run: npx playwright install-deps
      - name: Build dependencies
        run: pnpm turbo run ledger-live-desktop#build:testing
      - name: Run playwright tests [Linux => xvfb-run]
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm desktop test:playwright:update-snapshots
        shell: bash
      - name: Run playwright tests
        if: matrix.os != 'ubuntu-latest'
        run: pnpm desktop test:playwright:update-snapshots
        shell: bash
      - name: status
        id: status
        run: echo "::set-output name=status::$(git status --porcelain | wc -l)"
      - name: Commit snapshots
        if: steps.status.outputs.status != 0
        run: >
          git add ./apps/ledger-live-desktop/tests/specs &&
          git commit -m 'update screenshots (${{ matrix.os }})' &&
          git restore . &&
          git pull --rebase &&
          git push ||
          echo ""
