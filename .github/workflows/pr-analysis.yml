name: "[All Platforms] - Pull Request Analysis - PR"
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ["develop"]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  determine-affected:
    name: "Turbo Affected"
    if: ${{!github.event.pull_request.head.repo.fork}}
    uses: LedgerHQ/ledger-live/.github/workflows/turbo-affected-reusable.yml@develop
    with:
      head_branch: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}
      base_branch: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}

  sonarqube:
    name: "Sonar Cloud"
    needs: determine-affected
    runs-on: [ledger-live-4xlarge]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup git user
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-git-user@develop

      - name: Setup the caches
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-caches@develop
        id: caches
        with:
          skip-turbo-cache: "false"
          accountId: ${{ secrets.AWS_ACCOUNT_ID_PROD }}
          roleName: ${{ secrets.AWS_CACHE_ROLE_NAME }}
          region: ${{ secrets.AWS_CACHE_REGION }}
          turbo-server-token: ${{ secrets.TURBOREPO_SERVER_TOKEN }}

      - name: fetch develop
        run: |
          git fetch origin develop

      - name: Extract affected paths
        run: |
          paths="${{ needs.determine-affected.outputs.paths }}"
          paths="${paths#[}"; paths="${paths%]}"
          echo "AFFECTED_PATHS=$paths" >> $GITHUB_ENV

      - name: Install, Build and Test affected libraries
        run: |
          SONAR_SOURCES=""
          IFS=',' read -r -a paths_array <<< "$AFFECTED_PATHS"
          for path in "${paths_array[@]}"
          do
            if [ -f "$path/package.json" ]; then
              if jq -e '.scripts.coverage' "$path/package.json" > /dev/null; then
                if jq -e '.devDependencies["jest-sonar"] // .dependencies["jest-sonar"]' "$path/package.json" > /dev/null; then
                  echo "Running coverage for $path"
                  pnpm install --filter ./$path
                  pnpm --filter ./$path... run coverage || true
                  cat $path/coverage/lcov.info >> ./lcov.info
                  cat $path/coverage/sonar-executionTests-report.xml >> ./sonar-executionTests-report.xml
                  if [ -z "$SONAR_SOURCES" ]; then
                    SONAR_SOURCES="$path"
                  else
                    SONAR_SOURCES="$SONAR_SOURCES,$path"
                  fi
                else
                  echo "jest-sonar not installed in $path, skipping coverage."
                fi
              else
                echo "No coverage script for $path"
              fi
            fi
          done
          echo "SONAR_SOURCES=$SONAR_SOURCES" >> $GITHUB_ENV
        shell: bash

      - name: Test Desktop
        if: ${{contains(needs.determine-affected.outputs.paths, 'ledger-live-desktop')}}
        run: |
          pnpm desktop test:jest:coverage
          cat apps/ledger-live-desktop/coverage/lcov.info >> ./lcov.info
          cat apps/ledger-live-desktop/coverage/sonar-executionTests-report.xml >> ./sonar-executionTests-report.xml
          if [ -z "$SONAR_SOURCES" ]; then
            SONAR_SOURCES="apps/ledger-live-desktop"
          else
            SONAR_SOURCES="$SONAR_SOURCES,apps/ledger-live-desktop"
          fi
          echo "SONAR_SOURCES=$SONAR_SOURCES" >> $GITHUB_ENV

      - name: Test Mobile
        if: ${{contains(needs.determine-affected.outputs.paths, 'ledger-live-mobile')}}
        run: |
          pnpm mobile test:jest:coverage
          cat apps/ledger-live-mobile/coverage/lcov.info >> ./lcov.info
          cat apps/ledger-live-mobile/coverage/sonar-executionTests-report.xml >> ./sonar-executionTests-report.xml
          if [ -z "$SONAR_SOURCES" ]; then
            SONAR_SOURCES="apps/ledger-live-mobile"
          else
            SONAR_SOURCES="$SONAR_SOURCES,apps/ledger-live-mobile"
          fi
          echo "SONAR_SOURCES=$SONAR_SOURCES" >> $GITHUB_ENV

      - name: SonarQubeScan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.sources=apps,libs
            -Dsonar.testExecutionReportPaths=sonar-executionTests-report.xml
