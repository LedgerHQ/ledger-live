name: "[EXT-Mobile] - Build (External) - Called"

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: |
          If you run this manually, and want to run on a PR, the correct ref should be refs/pull/{PR_NUMBER}/merge to
          have the "normal" scenario involving checking out a merge commit between your branch and the base branch.
          If you want to run only on a branch or specific commit, you can use either the sha or the branch name instead (prefer the first verion for PRs).
        required: true
      repository:
        description: The repository to checkout the code from
        type: string
        required: true

permissions:
  contents: read

jobs:
  build-mobile-app-android:
    name: "Android Build"
    runs-on: ubuntu-22.04
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false
      - name: Setup git user
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-git-user@develop
      - name: Setup the caches
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-caches@develop
        id: setup-caches
        with:
          install-proto: true
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
        env:
          ImageOS: ubuntu20
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu" # See 'Supported distributions' for available options
          java-version: "17"
      - name: setup Android SDK
        uses: android-actions/setup-android@v2.0.10
      - name: install dependencies
        run: pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
      - uses: LedgerHQ/ledger-live/tools/actions/get-package-infos@develop
        id: version
        with:
          path: ${{ github.workspace }}/apps/ledger-live-mobile
      - name: set beta name
        uses: LedgerHQ/ledger-live/tools/actions/change-product-name@develop
        with:
          path: ${{ github.workspace }}/apps/ledger-live-mobile
      - name: Get short SHA
        id: slug
        run: echo "sha8=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: make local version
        env:
          VERSION: ${{ steps.version.outputs.clean }}-sha.${{ steps.slug.outputs.sha8 }}
        run: cd apps/ledger-live-mobile && npm version $VERSION
      - name: build the app
        env:
          ANDROID_KEYSTORE_PASS: staging
          ANDROID_KEY_ALIAS: staging
          ANDROID_KEY_PASS: staging
          NODE_OPTIONS: "--max-old-space-size=7168"
          ANDROID_KEYSTORE_FILE: ${{ github.workspace }}/apps/ledger-live-mobile/android/app/staging.kstr
        run: pnpm build:llm:android
      - uses: LedgerHQ/ledger-live/tools/actions/get-package-infos@develop
        id: post-version
        with:
          path: ${{ github.workspace }}/apps/ledger-live-mobile
      - name: upload Android app
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.post-version.outputs.version }}-release
          path: ${{ github.workspace }}/apps/ledger-live-mobile/android/app/build/outputs/apk/stagingRelease

  build-mobile-app-ios:
    runs-on: macos-14
    name: "iOS Build"
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false
      - name: Setup git user
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-git-user@develop
      - name: Setup the caches
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-caches@develop
        id: setup-caches
        with:
          install-proto: true
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
      - name: install dependencies
        run: pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm