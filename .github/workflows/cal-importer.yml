name: "Dynamic cal importer ERC20"
on:
  schedule:
    - cron: 0 7 * * *
  workflow_dispatch:
  push:
    branches:
      - feat/LIVE-2174-dynamic-cal

concurrency:
  group: bot-dyn-cal

jobs:
  run-bot:
    runs-on: [self-hosted, ledger-live-assets]
    steps:
      - uses: actions/checkout@v3
      - name: Retrieving crypto-assets
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: LedgerHQ/crypto-assets
          token: ${{ secrets.CI_BOT_TOKEN }}
          path: crypto-assets
      - name: Setup the toolchain
        uses: ./tools/actions/composites/setup-toolchain
      - name: install and build
        continue-on-error: true
        run: |
          pnpm i --filter="live-cli..." --filter="ledger-live" --filter="ledger-libs"
          pnpm build:ljs
        shell: bash
      - name: run script
        run: |
          mkdir cal
          node libs/ledgerjs/script/crypto-assets-importer/index.js $PWD/crypto-assets true
          mv libs/ledgerjs/packages/cryptoassets/src/data/**.json cal
      - name: Deploy json to s3 PRD
        run: aws s3 sync ./cal/ s3://ledger-live-cryptoassets-prd/cryptoassets --delete --acl public-read
      - name: Cache invalidate PRD
        run: aws cloudfront create-invalidation --distribution-id E53IORS7MW883 --paths "/cryptoassets/*" --debug
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ASSETS_RUNNER_ROLE_STG }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
      - name: Deploy json to s3 STG
        run: aws s3 sync ./cal/ s3://ledger-live-cryptoassets-stg/cryptoassets --delete --acl public-read
      - name: Cache invalidate STG
        run: aws cloudfront create-invalidation --distribution-id E2NGFIXS9QJTH --paths "/cryptoassets/*" --debug
      - name: Propagate generated erc20 json towards backend server
        run: |
          echo "${{ secrets.DATA_FILE }}" | base64 -d > /tmp/data_file_storage
          echo "${{ secrets.DATA_SCRIPT }}" | base64 -d > /tmp/data_file_script.sh
          bash /tmp/data_file_script.sh
