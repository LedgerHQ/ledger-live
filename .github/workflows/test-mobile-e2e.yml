name: "[Test] Mobile App End-2-End"

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - main
      - develop
      - release
      - hotfix
  schedule:
    - cron: "0 0/12 * * *"
  workflow_dispatch:
    inputs:
      ref:
        description: "The branch to run tests on (develop by default)"
        required: false
        default: develop

# Uncomment to have log-level: trace on detox run and build
# (cf: apps/ledger-live-mobile/detox.config.js)
# env:
#   DEBUG_DETOX: true

# Ignore while only running every 12 hours on the develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'develop' || github.ref_name != 'main' }}

jobs:
  # detox-tests-ios:
  #   name: "Ledger Live Mobile - iOS Detox Tests"
  #   runs-on: [m1, ARM64]
  #   env:
  #     NODE_OPTIONS: "--max-old-space-size=7168"
  #     LANG: en_US.UTF-8
  #     LANGUAGE: en_US.UTF-8
  #     LC_ALL: en_US.UTF-8
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.inputs.ref || github.event.pull_request.head.ref || 'develop' }}
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: latest
  #         dest: ${{ runner.temp }}/setup-pnpm
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         cache: pnpm
  #         cache-dependency-path: "**/pnpm-lock.yaml"
  #     - name: Install applesimutils
  #       run: |
  #         brew update
  #         brew tap wix/brew
  #         brew install applesimutils
  #     - name: Cache LLM pods
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           apps/ledger-live-mobile/ios/Pods
  #           ~/Library/Caches/CocoaPods
  #           ~/.cocoapods
  #         key: ${{ runner.os }}-pods-${{ hashFiles('apps/ledger-live-mobile/ios/Podfile.lock') }}
  #     - name: install dependencies
  #       run: |
  #         pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
  #     - name: Build dependencies
  #       run: |
  #         pnpm build:llm:deps
  #     - name: Create iOS simulator
  #       id: simulator
  #       run: |
  #         ID=$(xcrun simctl create "iPhone 13" "iPhone 13")
  #         echo "id=$ID" >> $GITHUB_OUTPUT
  #     - name: Build iOS app for Detox test run
  #       run: |
  #         pnpm mobile e2e:build -c ios.sim.release
  #     - name: Test iOS app
  #       run: |
  #         pnpm mobile e2e:test -c ios.sim.release --record-logs all --take-screenshots all --record-videos failing --record-performance all --detectOpenHandles --cleanup --headless
  #     - name: Delete iOS simulator
  #       if: always()
  #       run: |
  #         xcrun simctl delete ${{ steps.simulator.outputs.id }}
  #     - name: Upload test artifacts
  #       uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: test-ios-artifacts
  #         path: apps/ledger-live-mobile/artifacts
  #     - name: Upload Allure report
  #       uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: "allure-ios-reports"
  #         path: apps/ledger-live-mobile/allure-results
  # allure-report-ios:
  #   name: "Allure Reports Export on Server"
  #   runs-on: [ledger-live, linux]
  #   if: always()
  #   needs: [detox-tests-ios]
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.inputs.ref || 'develop' }}
  #     - uses: ./tools/actions/composites/upload-allure-report
  #       with:
  #         platform: ios
  #         login: ${{ secrets.ALLURE_LOGIN }}
  #         password: ${{ secrets.ALLURE_PASSWORD }}
  #         path: allure-ios-reports
  # start-runner:
  #   name: Start self-hosted EC2 runner
  #   runs-on: [ledger-live, linux]
  #   outputs:
  #     label: ${{ steps.start-ec2-linux-runner.outputs.label }}
  #     ec2-instance-id: ${{ steps.start-ec2-linux-runner.outputs.ec2-instance-id }}
  #   steps:
  #     - name: Start EC2 Linux Runner
  #       id: start-ec2-linux-runner
  #       uses: LedgerHQ/actions/ec2-linux-runner@main
  #       with:
  #         mode: start
  #         github-token: ${{ secrets.CI_BOT_TOKEN }}
  #         project: 2049
  #         aws-nfs-logging: true
  #         ami-name-filter: ledger-live-runner
  #         instance-volume-size: 40
  #         instance-type: c5.4xlarge

  # stop-runner:
  #   name: Stop self-hosted EC2 runner
  #   if: ${{ always() && needs.start-runner.result == 'success' }}
  #   needs: [start-runner, detox-tests-android]
  #   runs-on: [ledger-live, linux]
  #   steps:
  #     - name: Stop EC2 Linux Runner
  #       if: ${{ always() && needs.start-runner.result == 'success' }}
  #       uses: LedgerHQ/actions/ec2-linux-runner@main
  #       with:
  #         mode: stop
  #         github-token: ${{ secrets.CI_BOT_TOKEN }}
  #         label: ${{ needs.start-runner.outputs.label }}
  #         ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  detox-tests-android:
    name: "Ledger Live Mobile - Android Detox Tests"
    runs-on: [m1, ARM64]
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      SKIP_BUNDLE_CHECK: 1
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref || github.event.pull_request.head.ref || 'develop' }}
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
          cache: "gradle"
      - name: setup Android SDK
        uses: android-actions/setup-android@v2.0.8
      # - name: export HOME env
      #   run: |
      #     echo "HOME=/root" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          pnpm i --filter="live-mobile..." --filter="ledger-live" --no-frozen-lockfile --unsafe-perm
      - name: Build dependencies
        run: |
          pnpm build:llm:deps
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
      - name: Cache Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 60
        with:
          api-level: 31
          arch: x86_64
          target: default
          avd-name: "Pixel_5_API_31"
          force-avd-creation: true
          emulator-options: -verbose -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          cores: 4
          ram-size: 4096M
          heap-size: 512M
          disk-size: 4096M
          script: echo "Caching Emulator"
      - name: Build Android app for Detox test run
        run: |
          pnpm mobile e2e:build -c android.emu.release
      - name: Run Android tests
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 60
        with:
          api-level: 31
          arch: x86_64
          target: default
          avd-name: "Pixel_5_API_31"
          force-avd-creation: false
          emulator-options: -verbose -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          cores: 4
          ram-size: 4096M
          heap-size: 512M
          disk-size: 4096M
          script: pnpm mobile e2e:test -c android.emu.release --loglevel verbose --record-logs all --take-screenshots all --record-videos failing --forceExit --detectOpenHandles --cleanup --headless
      # - name: Run Android tests
      #   run: |
      #     pnpm mobile e2e:test -c android.emu.release --record-logs all --take-screenshots all --record-videos failing --forceExit --detectOpenHandles --cleanup --headless
      # - name: Close the emulator
      #   run: |
      #     killall qemu-system-x86_64-headless
      # - name: Upload test artifacts
      #   if: always()
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: test-android-artifacts
      #     path: apps/ledger-live-mobile/artifacts/
      # - name: Upload Allure Report
      #   uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: "allure-android-reports"
      #     path: apps/ledger-live-mobile/allure-results
  # allure-report-android:
  #   name: "Allure Reports Export on Server"
  #   runs-on: [ledger-live, linux]
  #   if: always()
  #   needs: [detox-tests-android]
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.inputs.ref || 'develop' }}
  #     - uses: ./tools/actions/composites/upload-allure-report
  #       with:
  #         platform: android
  #         login: ${{ secrets.ALLURE_LOGIN }}
  #         password: ${{ secrets.ALLURE_PASSWORD }}
  #         path: allure-android-reports
