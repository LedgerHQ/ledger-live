name: "@Desktop • Build App"
run-name: "@Desktop • Build App triggered by ${{ inputs.login || github.actor }} ${{ format('on ref {0}', github.ref_name) }}"

on:
  push:
    branches:
      - main
      - develop
      - release
      - hotfix
  workflow_dispatch:
    inputs:
      ref:
        description: |
          If you run this manually, and want to run on a PR, the correct ref should be refs/pull/{PR_NUMBER}/merge to
          have the "normal" scenario involving checking out a merge commit between your branch and the base branch.
          If you want to run only on a branch or specific commit, you can use either the sha or the branch name instead (prefer the first verion for PRs).
        required: false
      login:
        description: The GitHub username that triggered the workflow
        required: false
      base_ref:
        description: The base branch to merge the head into when checking out the code
        required: false
      prNumber:
        description: PR number
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name != 'develop' && github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  build-desktop-app:
    strategy:
      fail-fast: false
      matrix:
        config:
          [
            { name: "linux", os: "ledger-live-4xlarge-linux", image: "linux-x86_64.AppImage" },
            { name: "win", os: "windows-latest", dotnet: true, image: "win-x64.exe" },
            { name: "mac", os: "macos-latest", image: "mac.dmg" },
          ]

    name: "Build Ledger Live Desktop | ${{ matrix.config.name }}"
    runs-on: ${{ matrix.config.os }}
    outputs:
      linux: ${{ steps.status.outputs.linux }}
      win: ${{ steps.status.outputs.win }}
      mac: ${{ steps.status.outputs.mac }}

    continue-on-error: true
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}

      - name: Setup git user
        uses: ./tools/actions/composites/setup-git-user

      - name: Setup the toolchain
        id: toolchain
        uses: ./tools/actions/composites/setup-toolchain
        with:
          accountId: ${{ secrets.AWS_ACCOUNT_ID_PROD }}
          roleName: ${{ secrets.AWS_CACHE_ROLE_NAME }}
          region: ${{ secrets.AWS_CACHE_REGION }}
          install_dotnet: ${{ matrix.config.dotnet }}
          skip_turbo_cache: "false"
          turbo-server-token: ${{ secrets.TURBOREPO_SERVER_TOKEN }}

      - name: Build desktop
        id: build-desktop
        uses: ./tools/actions/composites/setup-build-desktop
        with:
          os: ${{ matrix.config.name }}

      - name: Build the app
        id: build-app
        run: pnpm build:lld --api="http://127.0.0.1:${{ steps.toolchain.outputs.port }}" --token="${{ secrets.TURBOREPO_SERVER_TOKEN }}" --team="foo"
        env:
          GENERATE_METAFILES: 1

      - name: Upload ${{ matrix.config.name }} app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-desktop.outputs.version }}-${{ matrix.config.image }}
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.build-desktop.outputs.name }}-${{ steps.build-desktop.outputs.version }}-${{ matrix.config.image }}

      - name: Upload bundle metafiles
        uses: actions/upload-artifact@v3
        if: ${{ !cancelled() }}
        with:
          name: ${{ matrix.config.name }}-js-bundle-metafiles
          path: ${{ github.workspace }}/apps/ledger-live-desktop/metafile.*

      - name: Push status
        id: status
        shell: bash
        if: ${{ !cancelled() }}
        run: echo "${{ matrix.config.name }}=${{ steps.build-app.outcome }}" >> $GITHUB_OUTPUT

  report:
    needs: build-desktop-app
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}

      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.GH_BOT_APP_ID }}
          private_key: ${{ secrets.GH_BOT_PRIVATE_KEY }}

      - uses: actions/download-artifact@v3
        with:
          name: linux-js-bundle-metafiles
          path: linux-js-bundle-metafiles
      - uses: actions/download-artifact@v3
        with:
          name: win-js-bundle-metafiles
          path: win-js-bundle-metafiles
      - uses: actions/download-artifact@v3
        with:
          name: mac-js-bundle-metafiles
          path: mac-js-bundle-metafiles

      - uses: actions/github-script@v6
        name: Produce statuses of builds
        id: statuses
        with:
          result-encoding: string
          script: |
            const obj = {
              linux: "${{ needs.build-desktop-app.outputs.linux }}",
              win: "${{ needs.build-desktop-app.outputs.win }}",
              mac: "${{ needs.build-desktop-app.outputs.mac }}"
            }
            return JSON.stringify(obj);

      - uses: ./tools/actions/desktop-report-build
        name: Report summary
        with:
          token: ${{ steps.generate-token.outputs.token }}
          statuses: ${{ steps.statuses.outputs.result }}
          attempt: ${{ github.run_attempt }}

      - uses: ./tools/actions/build-checks
        if: ${{ !cancelled() && inputs.prNumber != '' }}
        with:
          token: ${{ steps.generate-token.outputs.token }}
          baseBranch: ${{ inputs.base_ref || 'develop' }}
          prNumber: ${{ inputs.prNumber }}
          mode: desktop

      - uses: actions/upload-artifact@v3
        name: Upload output
        with:
          path: ${{ github.workspace }}/summary.json
          name: summary.json
