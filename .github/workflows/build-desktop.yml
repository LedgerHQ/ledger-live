name: Build Desktop App

on:
  push:
    branches:
      - main
      - develop
    # paths:
    #   - apps/ledger-live-desktop/**
  pull_request:
    # branches:
    #   - main
    #   - develop
    # paths:
    #   - apps/ledger-live-desktop/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  start-runner:
    name: "start ec2 instance"
    uses: ledgerhq/ledger-live/.github/workflows/start-linux-runner.yml@monorepo-setup
    with:
      instance-type: c5.4xlarge
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  stop-runner:
    name: "stop ec2 instance"
    if: ${{ needs.start-runner.result == 'success' }}
    needs: [start-runner, build-linux]
    uses: ledgerhq/ledger-live/.github/workflows/stop-linux-runner.yml@monorepo-setup
    with:
      label: ${{ needs.start-runner.outputs.label }}
      ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  build-linux:
    name: "Linux"
    needs: [start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
          # repository: ${{github.event.pull_request.head.repo.full_name}}
          persist-credentials: false
          fetch-depth: 0
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - uses: actions/setup-node@main
        with:
          node-version: 14.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: bump npm
        run: npm i -g npm
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: install linux dependencies
        run: sudo apt-get update && sudo apt-get install libudev-dev libusb-1.0-0-dev
      - name: install and switch to GCC 5.4x
        run: |
          cd apps/ledger-live-desktop
          ./tools/g++-5.4/install.sh
      - name: install dependencies
        run: pnpm i --frozen-lockfile
      - uses: ledgerhq/ledger-live/tools/actions/get-package-infos@monorepo-setup
        id: version
        with:
          path: ${{ github.workspace }}/apps/ledger-live-desktop
      - name: set beta name
        uses: ledgerhq/ledger-live/tools/actions/change-product-name@monorepo-setup
        with:
          path: ${{ github.workspace }}/apps/ledger-live-desktop
      # - name: make local version pr
      #   if: github.event_name == 'pull_request'
      #   env:
      #     VERSION: ${{ steps.version.outputs.clean }}-sha.${{ github.event.pull_request.head.sha }}
      #   run: yarn version --new-version="$VERSION"
      # - name: make local version push
      #   if: github.event_name == 'push'
      #   env:
      #     VERSION: ${{ steps.version.outputs.clean }}-sha.${{ github.sha }}
      #   run: yarn version --new-version="$VERSION"
      - name: build the app
        env:
          # TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          # TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        run: pnpm build:desktop
      # - uses: ledgerhq/ledger-live/tools/actions/get-package-infos@main
      #   id: post-version
      #   with:
      #     path: ${{ github.workspace }}
      - name: upload linux app
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.version.outputs.version }}-linux-x86_64.AppImage
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.version.outputs.name }}-${{ steps.version.outputs.clean }}-linux-x86_64.AppImage

  build-windows:
    name: "Windows"
    runs-on: [ledger-live, windows]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
          # repository: ${{github.event.pull_request.head.repo.full_name}}
          persist-credentials: false
          fetch-depth: 0
      - name: update path
        run: |
          echo "C:\Program Files\Git\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7 # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
        env:
          imageOS: win19
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.816
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - uses: actions/setup-node@main
        with:
          node-version: 14.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.x
      - name: bump npm
        # cd C:\actions-runner\_work\_tool\node\14.18.3\x64\
        # npm i --g npm@8.3.1 --force
        run: |
          pnpm add -g npm
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: install dependencies
        run: pnpm i --frozen-lockfile
        shell: bash
      - uses: ledgerhq/ledger-live/tools/actions/get-package-infos@monorepo-setup
        id: version
        with:
          path: ${{ github.workspace }}/apps/ledger-live-desktop
      - name: set beta name
        uses: ledgerhq/ledger-live/tools/actions/change-product-name@monorepo-setup
        with:
          path: ${{ github.workspace }}/apps/ledger-live-desktop
      # - name: make local version pr
      #   id: postversion1
      #   if: github.event_name == 'pull_request'
      #   run: echo "::set-output name=content::${{ steps.version.outputs.clean }}-sha.${{ github.event.pull_request.head.sha }}"
      # - name: make local version push
      #   id: postversion2
      #   if: github.event_name == 'push'
      #   run: echo "::set-output name=content::${{ steps.version.outputs.clean }}-sha.${{ github.sha }}"
      - name: build the app
        env:
          # TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          # TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        run: |
          npm --version
          pnpm build:desktop
        shell: bash
      - name: upload windows
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.version.outputs.version }}-win-x64.exe
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.version.outputs.name }}-${{ steps.version.outputs.version }}-win-x64.exe

  bundle-macos:
    name: "macOS"
    runs-on: [ledger-live, macos]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
          # repository: ${{github.event.pull_request.head.repo.full_name}}
          persist-credentials: false
          fetch-depth: 0
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - uses: actions/setup-node@main
        with:
          node-version: 14.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: bump npm
        run: npm i -g npm
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: install dependencies
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
        run: |
          eval "$(rbenv init - bash)"
          pnpm i --frozen-lockfile
      - uses: ledgerhq/ledger-live/tools/actions/get-package-infos@monorepo-setup
        id: version
        with:
          path: ${{ github.workspace }}/apps/ledger-live-desktop
      - name: set beta name
        uses: ledgerhq/ledger-live/tools/actions/change-product-name@monorepo-setup
        with:
          path: ${{ github.workspace }}/apps/ledger-live-desktop
      # - name: make local version pr
      #   if: github.event_name == 'pull_request'
      #   env:
      #     VERSION: ${{ steps.version.outputs.clean }}-sha.${{ github.event.pull_request.head.sha }}
      #   run: pnpm version --new-version="$VERSION"
      # - name: make local version push
      #   if: github.event_name == 'push'
      #   env:
      #     VERSION: ${{ steps.version.outputs.clean }}-sha.${{ github.sha }}
      #   run: yarn version --new-version="$VERSION"
      - name: build the app
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          # TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          # TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
        run: |
          eval "$(rbenv init - bash)"
          pnpm build:desktop
      # - uses: ledgerhq/ledger-live/tools/actions/get-package-infos@main
      #   id: post-version
      #   with:
      #     path: ${{ github.workspace }}
      - name: upload macOS app
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.version.outputs.version }}-mac.dmg
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.version.outputs.name }}-${{ steps.version.outputs.version }}-mac.dmg

  clean-macos-runner:
    runs-on: [ledger-live, macos]
    needs: [bundle-macos]
    steps:
      - name: Clean working directory
        run: |
          cd $RUNNER_WORKSPACE
          cd ..
          rm -r *
