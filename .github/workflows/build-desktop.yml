name: "[Build] Desktop App"

on:
  push:
    branches:
      - main
      - develop
      - release
      - hotfix
    # paths:
    #   - apps/ledger-live-desktop/**
  pull_request:
    # branches:
    #   - main
    #   - develop
    # paths:
    #   - apps/ledger-live-desktop/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'develop' }}

jobs:
  is-affected:
    outputs:
      is-desktop-affected: ${{ steps.affected.outputs.is-package-affected }}
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0
      - name: checkout branch (PR)
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
      - name: checkout branch (not PR)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git checkout $GITHUB_SHA
      - uses: ./tools/actions/turbo-affected
        id: affected
        with:
          package: "ledger-live-desktop"
          head-ref: ${{ github.event_name == 'pull_request' && format('origin/{0}', github.event.pull_request.base.ref) || 'HEAD^' }}

  # Run dummy jobs when not affected to pass the required status checks
  dummy:
    name: "Build Ledger Live Desktop"
    needs: is-affected
    if: ${{ needs.is-affected.outputs.is-desktop-affected != 'true' }}
    strategy:
      matrix:
        names:
          - Linux
          - Windows
          - Mac OS X
    runs-on: ubuntu-latest
    steps:
      - id: dummy
        run: exit 0

  pr-is-fork:
    name: "Check if the PR is a fork"
    needs: is-affected
    if: ${{ needs.is-affected.outputs.is-desktop-affected == 'true' }}
    uses: ./.github/workflows/pr-is-fork.yml
    with:
      non-pr-result: false
    secrets:
      token: ${{ secrets.COMMON_READ_ORG }}

  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: [ledger-live, linux]
    needs: [pr-is-fork]
    if: ${{ !fromJSON(needs.pr-is-fork.outputs.pr-is-fork) }}
    outputs:
      label: ${{ steps.start-ec2-linux-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-linux-runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 Linux Runner
        id: start-ec2-linux-runner
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: start
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          project: 2049
          aws-nfs-logging: true
          ami-name-filter: ledger-live-runner
          instance-volume-size: 30
          instance-type: c5.4xlarge

  stop-runner:
    name: Stop self-hosted EC2 runner
    if: ${{ always() && needs.start-runner.result == 'success' && !fromJSON(needs.pr-is-fork.outputs.pr-is-fork) }}
    needs: [start-runner, pr-is-fork, build-desktop-app-linux]
    runs-on: [ledger-live, linux]
    steps:
      - name: Stop EC2 Linux Runner
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  build-desktop-app-linux:
    name: "Build Ledger Live Desktop (Linux)"
    if: ${{ !fromJSON(needs.pr-is-fork.outputs.pr-is-fork) }}
    needs: [pr-is-fork, start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }}
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
          persist-credentials: false
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - uses: pnpm/action-setup@v2
        with:
          version: latest
          dest: ${{ runner.temp }}/setup-pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: TurboRepo local caching server
        id: turborepo-cache-server
        uses: ./tools/actions/turborepo-gh-cache
        with:
          server-token: "yolo"
          cleanup-cache-folder: "true"
      - uses: ./tools/actions/composites/build-desktop
        id: build-desktop
        with:
          os: linux
      - name: build the app
        run: pnpm build:lld --api="http://127.0.0.1:${{ steps.turborepo-cache-server.outputs.port }}" --token="yolo" --team="foo"
      - name: upload linux app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-desktop.outputs.version }}-linux-x86_64.AppImage
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.build-desktop.outputs.name }}-${{ steps.build-desktop.outputs.version }}-linux-x86_64.AppImage

  build-desktop-app-linux-external:
    name: "Build Ledger Live Desktop (Linux)"
    if: ${{ fromJSON(needs.pr-is-fork.outputs.pr-is-fork) }}
    needs: [pr-is-fork]
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
          persist-credentials: false
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      # - uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 3.1.2
      - uses: pnpm/action-setup@v2
        with:
          version: latest
          dest: ${{ runner.temp }}/setup-pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: TurboRepo local caching server
        id: turborepo-cache-server
        uses: ./tools/actions/turborepo-gh-cache
        with:
          server-token: "yolo"
          cleanup-cache-folder: "true"
      - uses: ./tools/actions/composites/build-desktop
        id: build-desktop
        with:
          os: linux
      - name: build the app
        run: pnpm build:lld --api="http://127.0.0.1:${{ steps.turborepo-cache-server.outputs.port }}" --token="yolo" --team="foo"
      - name: upload linux app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-desktop.outputs.version }}-linux-x86_64.AppImage
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.build-desktop.outputs.name }}-${{ steps.build-desktop.outputs.version }}-linux-x86_64.AppImage

  build-desktop-app-windows:
    name: "Build Ledger Live Desktop (Windows)"
    runs-on: [ledger-live, windows]
    needs: is-affected
    if: ${{ needs.is-affected.outputs.is-desktop-affected == 'true' }}
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
      - name: update path
        run: |
          echo "C:\Program Files\Git\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.816
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - uses: pnpm/action-setup@v2
        with:
          version: latest
          dest: ${{ runner.temp }}/setup-pnpm
      - name: TurboRepo local caching server
        id: turborepo-cache-server
        uses: ./tools/actions/turborepo-gh-cache
        with:
          server-token: "yolo"
          cleanup-cache-folder: "true"
      - uses: ./tools/actions/composites/build-desktop
        id: build-desktop
        with:
          os: win
      - name: build the app
        run: |
          pnpm build:lld --api="http://127.0.0.1:${{ steps.turborepo-cache-server.outputs.port }}" --token="yolo" --team="foo"
        shell: bash
      - name: upload windows
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-desktop.outputs.version }}-win-x64.exe
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.build-desktop.outputs.name }}-${{ steps.build-desktop.outputs.version }}-win-x64.exe

  build-desktop-app-macos:
    name: "Build Ledger Live Desktop (Mac OS X)"
    needs: is-affected
    if: ${{ needs.is-affected.outputs.is-desktop-affected == 'true' }}
    runs-on: [ledger-live, macos]
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.push.head.sha }}
          persist-credentials: false
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - uses: pnpm/action-setup@v2
        with:
          version: latest
          dest: ${{ runner.temp }}/setup-pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - name: TurboRepo local caching server
        id: turborepo-cache-server
        uses: ./tools/actions/turborepo-gh-cache
        with:
          server-token: "yolo"
          cleanup-cache-folder: "true"
      - uses: ./tools/actions/composites/build-desktop
        id: build-desktop
        with:
          os: mac
      - name: build the app
        run: |
          eval "$(rbenv init - bash)"
          pnpm build:lld --api="http://127.0.0.1:${{ steps.turborepo-cache-server.outputs.port }}" --token="yolo" --team="foo"
      - name: upload macOS app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-desktop.outputs.version }}-mac.dmg
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/${{ steps.build-desktop.outputs.name }}-${{ steps.build-desktop.outputs.version }}-mac.dmg
