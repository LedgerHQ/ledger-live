name: "[PR] Build and Test"
on:
  merge_group:
    types: [checks_requested]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name != 'develop' && github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: "never"
          skip_after_successful_duplicate: "true"
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  determine-affected:
    name: "Turbo Affected"
    needs: pre_job
    if: ${{!github.event.pull_request.head.repo.fork && needs.pre_job.outputs.should_skip != 'true'}}
    uses: LedgerHQ/ledger-live/.github/workflows/turbo-affected-reusable.yml@develop
    with:
      head_branch: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}
      base_branch: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}

  log-affected:
    name: "Log Affected"
    needs: determine-affected
    runs-on: ubuntu-latest
    steps:
      - name: Log affected paths
        run: |
          echo "AFFECTED : ${{needs.determine-affected.outputs.affected}}"
          echo "PATHS : ${{needs.determine-affected.outputs.paths}}"
          echo "PACKAGES : ${{needs.determine-affected.outputs.packages}}"

  # LLD
  build-desktop:
    name: "Build Desktop"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'ledger-live-desktop')}}
    uses: LedgerHQ/ledger-live/.github/workflows/build-desktop-reusable.yml@develop
    secrets: inherit

  test-desktop:
    name: "Test Desktop"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'ledger-live-desktop')}}
    uses: LedgerHQ/ledger-live/.github/workflows/test-desktop-reusable.yml@develop
    secrets: inherit

  # LLM
  build-mobile:
    name: "Build Mobile"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'ledger-live-mobile')}}
    uses: LedgerHQ/ledger-live/.github/workflows/build-mobile-reusable.yml@develop
    secrets: inherit

  test-mobile:
    name: "Test Mobile"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'ledger-live-mobile')}}
    uses: LedgerHQ/ledger-live/.github/workflows/test-mobile-reusable.yml@develop
    secrets: inherit

  test-mobile-e2e:
    name: "Test Mobile E2E"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'ledger-live-mobile')}}
    uses: LedgerHQ/ledger-live/.github/workflows/test-mobile-e2e-reusable.yml@develop
    secrets: inherit

  # Tests
  test-libraries:
    name: "Test Libraries"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'libs')}}
    uses: LedgerHQ/ledger-live/.github/workflows/test-libs-reusable.yml@develop
    secrets: inherit

  test-design-system:
    name: "Test Design System"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'libs/ui')}}
    uses: LedgerHQ/ledger-live/.github/workflows/test-design-system-reusable.yml@develop
    secrets: inherit

  build-web-tools:
    name: "Build Web Tools"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'apps/web-tools')}}
    uses: LedgerHQ/ledger-live/.github/workflows/build-web-tools-reusable.yml@develop
    secrets: inherit

  test-cli:
    name: "Test CLI"
    needs: determine-affected
    if: ${{contains(needs.determine-affected.outputs.paths, 'apps/cli')}}
    uses: LedgerHQ/ledger-live/.github/workflows/test-cli-reusable.yml@develop
    secrets: inherit

  prepare-pr-analysis:
    name: "Prepare Pull Request Analysis"
    runs-on: ubuntu-latest
    needs:
      - build-mobile
      - test-mobile
      - build-desktop
      - test-desktop
      - test-libraries
    steps:
      - name: Prepare PR Analysis
        run: |
          input="[apps/ledger-live-desktop,apps/ledger-live-mobile]"
          input="${input#[}"; input="${input%]}"
          IFS=',' read -r -a array <<< "$input"
          for element in "${array[@]}"
          do
            echo "$element"
          done

          if [[ "$DESKTOP_AFFECTED" == 'true' ]]; then 
            cat apps/ledger-live-desktop/coverage/lcov.info >> ./lcov.info 
            cat apps/ledger-live-desktop/coverage/sonar-executionTests-report.xml >> ./sonar-executionTests-report.xml 
          fi
          if [[ "$MOBILE_AFFECTED" == 'true' ]]; then 
            cat apps/ledger-live-mobile/coverage/lcov.info >> ./lcov.info 
            cat apps/ledger-live-mobile/coverage/sonar-executionTests-report.xml >> ./sonar-executionTests-report.xml 
          fi

  perform-pr-analysis:
    name: "SonarQube Pull Request Analysis"
    runs-on: ubuntu-latest
    needs: prepare-pr-analysis
    steps:
      - id: run_scan
        name: Run Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.sources=${{ env.DESKTOP_AFFECTED == 'true' && 'apps/ledger-live-desktop,' || '' }}${{ env.MOBILE_AFFECTED == 'true' && 'apps/ledger-live-mobile,' || '' }}libs
            -Dsonar.testExecutionReportPaths=sonar-executionTests-report.xml

  # Final Check required
  ok:
    name: "OK"
    needs:
      - build-desktop
      - test-desktop
      - build-mobile
      - test-mobile
      - test-mobile-e2e
      - test-libraries
      - test-design-system
      - build-web-tools
      - test-cli
    runs-on: ubuntu-22.04
    if: always() && !cancelled()
    steps:
      - name: Check result
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1
