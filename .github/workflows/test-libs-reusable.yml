name: "Test libraries"

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      since_branch:
        description: The branch that turborepo will check when diffing.
        default: "develop"
      ref:
        description: |
          If you run this manually, and want to run on a PR, the correct ref should be refs/pull/{PR_NUMBER}/merge to
          have the "normal" scenario involving checking out a merge commit between your branch and the base branch.
          If you want to run only on a branch or specific commit, you can use either the sha or the branch name instead (prefer the first verion for PRs).
        required: false

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  test-libraries:
    name: "Test Libraries"
    env:
      NODE_OPTIONS: "--max-old-space-size=8192"
      FORCE_COLOR: 3
      CI_OS: ubuntu-22.04

    runs-on: [ledger-live-4xlarge]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}
          fetch-depth: 0
      - name: Setup the caches
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-caches@develop
        id: cache
        with:
          skip-turbo-cache: "false"
          accountId: ${{ secrets.AWS_ACCOUNT_ID_PROD }}
          roleName: ${{ secrets.AWS_CACHE_ROLE_NAME }}
          region: ${{ secrets.AWS_CACHE_REGION }}
          turbo-server-token: ${{ secrets.TURBOREPO_SERVER_TOKEN }}
      - name: Install dependencies
        run: pnpm i --filter="!./apps/**"
      - name: Build and Test affected libraries
        id: test-libs
        run: pnpm run test --continue --filter="!./apps/**" --filter="!./libs/ui/**" --filter="!./tools/**" --filter="!./apps/ledger-live*...[${{ inputs.since_branch && format('origin/{0}', inputs.since_branch) || 'HEAD^1' }}]" --api="http://127.0.0.1:${{ steps.cache.outputs.port }}" --token="${{ secrets.TURBOREPO_SERVER_TOKEN }}" --team="foo"
        shell: bash
      - name: (On Failure) Upload live-common snapshots and source
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: live-common-src
          path: |
            libs/ledger-live-common/src
      - uses: actions/github-script@v7
        if: ${{ !cancelled() }}
        with:
          script: |
            const fs = require("fs");
            fs.writeFileSync("summary-tests.txt", "${{ steps.test-libs.outcome }}", "utf-8");
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: outputs-test-libraries
          path: ${{ github.workspace }}/summary-tests.txt

  codecheck-libraries:
    name: "Codecheck Libraries"
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
      FORCE_COLOR: 3
      CI_OS: ubuntu-22.04

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}
          fetch-depth: 0
      - name: Setup the toolchain
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-toolchain@develop
        id: toolchain
        with:
          accountId: ${{ secrets.AWS_ACCOUNT_ID_PROD }}
          roleName: ${{ secrets.AWS_CACHE_ROLE_NAME }}
          region: ${{ secrets.AWS_CACHE_REGION }}
          turbo-server-token: ${{ secrets.TURBOREPO_SERVER_TOKEN }}
          skip-turbo-cache: "false"
      - name: Install dependencies
        run: pnpm i --filter="!./apps/**"
      - name: Lint affected libraries
        id: lint-libs
        run: pnpm lint --continue --filter="!./apps/**" --filter="!./tools/**" --filter="!ledger-live*...[${{ inputs.since_branch && format('origin/{0}', inputs.since_branch) || 'HEAD^1' }}]" --api="http://127.0.0.1:${{ steps.toolchain.outputs.port }}" --token="${{ secrets.TURBOREPO_SERVER_TOKEN }}" --team="foo" -- --quiet
      - name: Typecheck affected libraries
        id: typecheck-libs
        run: pnpm typecheck --continue --filter="!./apps/**" --filter="!./tools/**" --filter="!ledger-live*...[${{ inputs.since_branch && format('origin/{0}', inputs.since_branch) || 'HEAD^1' }}]" --api="http://127.0.0.1:${{ steps.toolchain.outputs.port }}" --token="${{ secrets.TURBOREPO_SERVER_TOKEN }}" --team="foo"
      - name: Test unimported files
        id: unimported
        run: pnpm unimported --continue --filter="!./apps/**" --filter="!./tools/**" --filter="!ledger-live*...[${{ inputs.since_branch && format('origin/{0}', inputs.since_branch) || 'HEAD^1' }}]" --api="http://127.0.0.1:${{ steps.toolchain.outputs.port }}" --token="${{ secrets.TURBOREPO_SERVER_TOKEN }}" --team="foo"
        shell: bash
      - uses: actions/github-script@v6
        if: ${{ !cancelled() }}
        with:
          script: |
            const fs = require("fs");
            fs.writeFileSync("summary-typecheck.txt", "${{ steps.typecheck-libs.outcome }}", "utf-8");
            fs.writeFileSync("summary-lint.txt", "${{ steps.lint-libs.outcome }}", "utf-8");
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: outputs-codecheck
          path: |
            ${{ github.workspace }}/summary-typecheck.txt
            ${{ github.workspace }}/summary-lint.txt

  test-docs:
    name: "Test Docs"
    runs-on: ubuntu-22.04
    outputs:
      fail: ${{ steps.diff.outputs.diff }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}
      - name: Setup the toolchain
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-toolchain@develop
        id: toolchain
        with:
          accountId: ${{ secrets.AWS_ACCOUNT_ID_PROD }}
          roleName: ${{ secrets.AWS_CACHE_ROLE_NAME }}
          region: ${{ secrets.AWS_CACHE_REGION }}
          turbo-server-token: ${{ secrets.TURBOREPO_SERVER_TOKEN }}
          skip-turbo-cache: "false"
      - name: Install dependencies
        run: pnpm i --filter="!./apps/**"
      - name: run doc
        run: pnpm doc:ljs --api="http://127.0.0.1:${{ steps.toolchain.outputs.port }}" --token="${{ secrets.TURBOREPO_SERVER_TOKEN }}" --team="foo"
      - name: get diff
        id: diff
        run: |
          diff=$(git diff --exit-code > /dev/null && echo 0 || echo 1)
          echo "diff=$diff" >> $GITHUB_OUTPUT
          exit $diff

  report:
    needs: [test-docs, test-libraries, codecheck-libraries]
    if: ${{ !cancelled() && github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: outputs-*
          merge-multiple: true
          path: outputs
      - uses: actions/github-script@v6
        name: build summary
        with:
          script: |
            const fs = require("fs");
            const resultTests = fs.readFileSync("${{ github.workspace }}/outputs/summary-tests.txt", "utf-8");
            const resultLint = fs.readFileSync("${{ github.workspace }}/outputs/summary-lint.txt", "utf-8");
            const resultTypecheck = fs.readFileSync("${{ github.workspace }}/outputs/summary-typecheck.txt", "utf-8");
            const statuses = {
              doc: {
                pass: ${{ needs.test-docs.outputs.fail != '1' }},
                status: "${{ needs.test-docs.result }}",
              },
              codecheck: {
                pass: ${{ needs.codecheck-libraries.result == 'success' }},
                status: "${{ needs.codecheck-libraries.result }}",
              },
              tests: {
                pass: ${{ needs.test-libraries.result == 'success' }},
                status: "${{ needs.test-libraries.result }}",
              },
              lint: {
                pass: resultLint == 'success',
                status: resultLint,
              },
              typecheck: {
                pass: resultTypecheck == 'success',
                status: resultTypecheck,
              },
            };

            const summary = `### Test documentation files
            ${statuses.doc.pass ? "Documentation files are fine" : "Documentation files are outdated"}
              - ${statuses.doc.pass ? "✅" : "❌"} **Test documentation files** ended with status \`${statuses.doc.status}\`

            ### Codecheck Libraries

            ${statuses.codecheck.pass ? "Codecheck was successfull" : "Codecheck failed"}
              - ${statuses.codecheck.pass ? "✅" : "❌"} **Codecheck** ended with status \`${statuses.codecheck.status}\`

            | Lint | Typecheck |
            | :--: | :--: |
            | ${statuses.lint.pass ? "✅" : "❌"} (${statuses.lint.status}) | ${statuses.typecheck.pass ? "✅" : "❌"} (${statuses.typecheck.status}) |

            ### Test Libraries

            ${statuses.tests.pass ? "All tests are fine" : "Some tests failed"}
              - ${statuses.tests.pass ? "✅" : "❌"} **Test Libs** ended with status \`${statuses.tests.status}\`

            ### Common Tools

            ${statuses.tool.pass ? "Common Tools are fine" : "Common Tools tests failed"}
              - ${statuses.tool.pass ? "✅" : "❌"} **Common Tools* tests* ended with status \`${statuses.tool.status}\`
            `;

            const actions = [];

            if (${{ needs.test-docs.outputs.fail == '1' }}) {
              actions.push({
                // 20 chars max
                label: "Regen. Doc Files",
                // 20 chars max
                identifier: "regen_doc",
                // 40 chars max
                description: "Will regenerate doc files for ljs",
              });
            }

            const output = {
              summary,
              actions
            };

            fs.writeFileSync("summary-libraries.json", JSON.stringify(output), "utf-8");
      - uses: actions/upload-artifact@v4
        name: Upload output
        with:
          path: ${{ github.workspace }}/summary-libraries.json
          name: summary-libraries.json
