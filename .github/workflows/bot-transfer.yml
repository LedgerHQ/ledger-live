name: "Bot Transfer"
run-name: Transfer from bot ${{inputs.origin}} to ${{inputs.recipient}} (${{inputs.currencies}} 100%/${{inputs.split}})
on:
  workflow_dispatch:
    inputs:
      origin:
        description: "index of the seed to send from (e.g. 1)"
        required: true
      recipient:
        description: "index of the seed to receive the funds (e.g. 4)"
        required: true
      split:
        description: "split the amount of the origin by this number. For instance 2 will send half of the amount, 3 will send 1/3rd of the amount, etc."
        required: false
      concurrency:
        description: "number of concurrent transfers to run"
        required: false
      currencies:
        description: "a comma separated list of currencies to transfer. If not specified, all currencies will be transferred."
        required: false

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: [ledger-live, linux]
    outputs:
      label: ${{ steps.start-ec2-linux-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-linux-runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 Linux Runner
        id: start-ec2-linux-runner
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: start
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          project: 2049
          aws-nfs-logging: true
          ami-name-filter: ledger-live-runner
          instance-volume-size: 30

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs: [start-runner, run-bot]
    runs-on: [ledger-live, linux]
    timeout-minutes: 5
    steps:
      - name: Stop EC2 Linux Runner
        if: ${{ always() && needs.start-runner.result == 'success' }}
        uses: LedgerHQ/actions/ec2-linux-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  run-bot:
    runs-on: ${{ needs.start-runner.outputs.label }}
    needs: [start-runner]
    steps:
      - uses: actions/checkout@v3
      - name: Retrieving coin apps
        uses: actions/checkout@v3
        with:
          ref: generated/ledger-live-bot
          repository: LedgerHQ/coin-apps
          token: ${{ secrets.GH_PAT }}
          path: coin-apps
      - name: Setup the toolchain
        uses: ./tools/actions/composites/setup-toolchain
      - name: pull docker image
        run: docker pull ghcr.io/ledgerhq/speculos
      - name: install and build
        run: |
          pnpm i --filter="live-cli..." --filter="ledger-live"
          pnpm build:cli
          cd apps/cli
          npm link
      - name: bot transfer
        env:
          NODE_OPTIONS: "--max-old-space-size=7168"
          CONCURRENCY: ${{ github.event.inputs.concurrency }}
          ONLY_CURRENCIES: ${{ github.event.inputs.currencies }}
          SEED: ${{ secrets[format('SEED{0}', inputs.origin)] }}
          SEED_RECIPIENT: ${{ secrets[format('SEED{0}', inputs.recipient)] }}
          VERBOSE_FILE: bot-transfer.txt
          FUNDS_SPLIT: ${{ github.event.inputs.split }}
        run: COINAPPS=$PWD/coin-apps ledger-live botTransfer
        timeout-minutes: 200
      - name: upload logs
        if: failure() || success()
        uses: actions/upload-artifact@v3
        with:
          name: bot-transfer.txt
          path: bot-transfer.txt
