name: "[EXT-Desktop] - Build (External) - Called"

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: |
          If you run this manually, and want to run on a PR, the correct ref should be refs/pull/{PR_NUMBER}/merge to
          have the "normal" scenario involving checking out a merge commit between your branch and the base branch.
          If you want to run only on a branch or specific commit, you can use either the sha or the branch name instead (prefer the first verion for PRs).
        required: true
      repository:
        description: The repository to checkout the code from
        type: string
        required: true

jobs:
  build-desktop-app:
    strategy:
      matrix:
        config:
          [
            { name: "Linux", os: "ubuntu-22.04", image: "linux-x86_64.AppImage", output-name: "linux" },
            { name: "Windows", os: "windows-2022", dotnet: true, image: "win-x64.exe", output-name: "win" },
            { name: "macOS", os: "macos-14", image: "mac.dmg", output-name: "mac" },
          ]
    runs-on: ${{ matrix.config.os }}
    name: "${{ matrix.config.name }} Build (External)"
    outputs:
      linux: ${{ steps.save-result.outputs.Linux }}
      windows: ${{ steps.save-result.outputs.Windows }}
      mac: ${{ steps.save-result.outputs.macOS }}
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - name: Format os name
        id: os
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            if ("${{ matrix.config.output-name }}" === "linux") {
              return "linux"
            } else if ("${{ matrix.config.output-name }}" === "mac") {
              return "mac"
            } else if ("${{ matrix.config.output-name }}" === "win") {
              return "win"
            }
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false
      - name: Setup git user
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-git-user@develop
      - uses: actions/setup-python@v4
        with:
          python-version: "3.13.0"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true
      - name: Setup the caches
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-caches@develop
        id: setup-caches
        with:
          install-proto: true
      - name: Build desktop
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-build-desktop@develop
        id: build-desktop
        with:
          os: ${{ steps.os.outputs.result }}
      - name: Build the app
        id: build-app
        run: pnpm build:lld
      - name: Save result
        id: save-result
        shell: bash
        if: ${{ !cancelled() }}
        run: |
          echo "${{matrix.config.output-name}}=${{steps.build-app.outcome}}" >> $GITHUB_OUTPUT
      - name: Upload app
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-desktop.outputs.version }}-${{ matrix.config.image }}
          path: ${{ github.workspace }}/apps/ledger-live-desktop/dist/ledger-live-desktop-${{ steps.build-desktop.outputs.version }}-${{ matrix.config.image }}

