name: "Setup Ledger Live Desktop Tests"
description: "Composite job to setup the CI for Ledger Live Desktop tests"
inputs:
  skip_python:
    description: "skip the step to setup python"
    required: false
  skip_ruby:
    description: "skip the step to setup ruby"
    required: false
  skip_builds:
    description: "skip the steps to build the desktop and dummy-live-app"
    required: false
  install_node_gyp:
    description: "install node-gyp"
    required: false
  install_playwright:
    description: "install playwright"
    required: false

runs:
  using: "composite"
  steps:
    - uses: pnpm/action-setup@v2
      with:
        version: latest
        dest: ${{ runner.temp }}/setup-pnpm
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: pnpm
        cache-dependency-path: "**/pnpm-lock.yaml"
    - uses: actions/setup-python@v4
      if: ${{ !inputs.skip_python }}
      with:
        python-version: "3.x"
    - uses: ruby/setup-ruby@v1
      if: ${{ !inputs.skip_ruby }}
      with:
        ruby-version: 3.1.2
    - name: Install node-gyp globally
      if: ${{ inputs.install_node_gyp }}
      run: |
        pnpm add -g node-gyp
      shell: bash
    - name: Install dependencies
      run: pnpm i --filter="ledger-live-desktop..." --filter="ledger-live" --filter="dummy-live-app" --frozen-lockfile --unsafe-perm
      shell: bash
    - name: Install playwright dependencies
      if: ${{ inputs.install_playwright }}
      run: npx playwright@1.27.1 install --with-deps chromium
      shell: bash
    - name: TurboRepo local caching server
      id: turborepo-cache-server
      uses: ./tools/actions/turborepo-gh-cache
      with:
        server-token: "yolo"
        cleanup-cache-folder: "true"
    - name: Build dependencies
      env:
        GOGC: 75
      run: |
        pnpm build:lld:deps --api="http://127.0.0.1:${{ steps.turborepo-cache-server.outputs.port }}" --token="yolo" --team="foo"
      shell: bash
    - name: Build desktop testing
      if: ${{ !inputs.skip_builds }}
      run: |
        pnpm desktop build:testing
      shell: bash
    - name: Build Dummy SDK app for testing
      if: ${{ !inputs.skip_builds }}
      run: pnpm --filter="dummy-live-app" build
      shell: bash
