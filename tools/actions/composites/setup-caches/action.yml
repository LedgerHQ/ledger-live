name: "Setup Caches"
description: "Setup caches for faster running time"
inputs:
  skip_pnpm_cache:
    description: "true to skip pnpm caching, false by default"
    required: false
    default: "false"
  skip_pod_cache:
    description: "false to get cache, true by default"
    required: false
    default: "true"
  skip_turbo_cache:
    description: "false to get cache, true by default"
    required: false
    default: "true"
  accountId:
    description: "aws cache account id"
    required: true
  roleName:
    description: "aws cache role name"
    required: true
  region:
    description: "aws cache region"
    required: false
    default: "eu-west-1"
  turbo-server-token:
    description: "custom token for local s3 server"
    required: false
    default: "yolo"

runs:
  using: "composite"
  steps:
    - name: Setup the toolchain
      shell: bash
      run: proto use

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      if: inputs.accountId != '' && inputs.roleName != ''
      id: aws
      with:
        role-to-assume: arn:aws:iam::${{ inputs.accountId }}:role/${{ inputs.roleName }}
        aws-region: ${{ inputs.region }}

    - name: Cache pnpm store
      uses: tespkg/actions-cache@v1
      if: steps.aws.conclusion == 'success' && inputs.skip_pnpm_cache != 'false'
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        accessKey: ${{ env.AWS_ACCESS_KEY_ID }}
        secretKey: ${{ env.AWS_SECRET_ACCESS_KEY }}
        sessionToken: ${{ env.AWS_SESSION_TOKEN}}
        bucket: ll-gha-s3-cache
        region: ${{ inputs.region }}
        use-fallback: false

    - name: Cache LLM pods
      uses: actions/cache@v3
      if: inputs.skip_pod_cache != 'true'
      with:
        path: |
          apps/ledger-live-mobile/ios/Pods
          ~/Library/Caches/CocoaPods
          ~/.cocoapods
        key: ${{ runner.os }}-pods-${{ hashFiles('apps/ledger-live-mobile/ios/Podfile.lock') }}

    - name: TurboRepo local caching server
      id: turborepo-cache-server
      if: steps.aws.conclusion == 'success' && inputs.skip_turbo_cache != 'true'
      uses: ./tools/actions/turborepo-s3-cache
      with:
        server-token: "${{ inputs.turbo-server-token }}"
        cleanup-cache-folder: "true"
        aws-access-key: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        region: ${{ inputs.region }}
