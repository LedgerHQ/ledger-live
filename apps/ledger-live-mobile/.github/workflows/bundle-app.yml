name: "[Build] Android Apk"
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - develop
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-if-fork:
    runs-on: ubuntu-20.04
    outputs:
      forked: ${{ steps.forked.outputs.forked }}
    steps:
      - name: echo
        run: |
          echo ${{ github.event.pull_request.head.repo.full_name }}
          echo ${{ github.repository }}
      - name: check if we are on a forked repo
        id: forked
        run: echo "::set-output name=forked::$(${{ github.event.pull_request.head.repo.full_name != github.repository }})"

  start-runner:
    needs: [check-if-fork]
    if: ${{ !needs.check-if-fork.outputs.forked && github.actor != 'dependabot[bot]' }}
    name: "start ec2 instance (Linux)"
    uses: ledgerhq/actions/.github/workflows/start-linux-runner.yml@main
    with:
      instance-type: c5.4xlarge
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  stop-runner:
    name: "stop ec2 instance (Linux)"
    needs: [start-runner, bundle-apk-hosted]
    uses: ledgerhq/actions/.github/workflows/stop-linux-runner.yml@main
    if: ${{ always() && !needs.check-if-fork.outputs.forked && github.actor != 'dependabot[bot]' && needs.start-runner.result == 'success' }}
    with:
      label: ${{ needs.start-runner.outputs.label }}
      ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  bundle-apk-hosted:
    needs: [start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - uses: actions/setup-node@v3
        if: always()
        with:
          node-version: 14.x
      - name: install yarn
        if: always()
        run: npm i -g yarn
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
        env:
          ImageOS: ubuntu20
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.6
      - name: install yarn
        if: always()
        run: npm install --global yarn
      - name: install pnpm
        if: always()
        run: npm install --global pnpm
      - name: Get pnpm store
        id: pnpm-store
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.pnpm-store.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: install dependencies
        run: pnpm i --frozen-lockfile
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: version
      - name: set beta name
        uses: ledgerhq/ledger-live/tools/actions/change-product-name@develop
        with:
          path: ${{ github.workspace }}
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(git rev-parse HEAD)"
      - name: make local version
        run: yarn version --new-version=${{ steps.version.outputs.clean }}-sha.${{ steps.slug.outputs.sha8 }}
      - name: build the app
        env:
          ANDROID_KEYSTORE_PASS: staging
          ANDROID_KEY_ALIAS: staging
          ANDROID_KEY_PASS: staging
          NODE_OPTIONS: "--max-old-space-size=7168"
        run: ANDROID_KEYSTORE_FILE="$(pwd)/android/app/staging.kstr" pnpm run android:local:apk --enable-pre-post-scripts
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: post-version
      - name: upload Android app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.post-version.outputs.version }}-release
          path: android/app/build/outputs/apk/release

  bundle-apk-guest:
    needs: [check-if-fork]
    if: ${{ needs.check-if-fork.outputs.forked || github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: pnpm
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - uses: ledgerhq/actions/packages/has-hash-commit-deps@main
        id: has-hash-commit-deps
        with:
          workspace: ${{ github.workspace }}
      - name: install dependencies
        run: pnpm i --frozen-lockfile
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: version
      - name: set beta name
        uses: ledgerhq/ledger-live/tools/actions/change-product-name@develop
        with:
          path: ${{ github.workspace }}
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(git rev-parse HEAD)"
      - name: make local version
        run: yarn version --new-version=${{ steps.version.outputs.clean }}-sha.${{ steps.slug.outputs.sha8 }}
      - name: build the app
        env:
          ANDROID_KEYSTORE_PASS: staging
          ANDROID_KEY_ALIAS: staging
          ANDROID_KEY_PASS: staging
          NODE_OPTIONS: "--max-old-space-size=7168"
        run: ANDROID_KEYSTORE_FILE="$(pwd)/android/app/staging.kstr" pnpm run android:local:apk --enable-pre-post-scripts
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: post-version
      - name: upload Android app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.post-version.outputs.version }}-release
          path: android/app/build/outputs/apk/release
